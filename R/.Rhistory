print(result)
result<-c(1,1.2,3)
print(resulr)
print(result)
result<-c(1,1.2,3.27)
print(result)
result<-c(1,1.2L,3.27)
print(result)
result<-c(1L,1.2,3.27)
print(result)
inte <- c(2L,3L)
print(inte)
char <- c("krish","maniprabha")
print(char)
type(inte)
typeof(inte)
typeof(char)
typeof(logicals)
length(char)
#Checking for specific type
is.integer(result)
is.integer(char)
is.integer(inte)
is.logical(logicals)
logi <- c(TRUE,FALSE)
is.logical(logi)
print(logi)
typeof(logi)
#Assigning name
c<-5
print(c)
names(inte)<-c("x","y")
print(x)
print(inte)
#List
list("a",55,"krish",55.5)
#List
newvar<-list("a",55,"krish",55.5)
typeof(newvar)
print(newvar)
li2<-list(newvar)
typeof(li2)
print(li2)
str(newvar)
#List
newvar<-list("a",55,"krish",55.5,TRUE) #list() function is used to create a function and it can contain different data types.
#List
newvar<-list("a",55,"krish",55.5) #list() function is used to create a function and it can contain different data types.
li2<-list(newvar) #list of list (can go so on)
print(newvar)
print(li2)
#Finding data type of individual items in a list
str(newvar)
newli <- list(2,2,FALSE)
print(newli)
str(newli)
str(li2)
#Naming lists
d <- list("krish_age"=20,"maniprabha_age"=21)
print(d)
install.packages("tidyverse")
library(tidyverse)
library(lubridate)
today()
today()
now()
ymd("2024-03-16")
#Example
myd("03-2004-16")
myd("Jan-2004-16")
myd("January 20,2004")
myd("January 20th,2004")
myd("January 2004,20th")
mdy("january 20th, 2004")
ymd(20240316)
#Date with time
dmy_hms("14/06/2024 21:38:50")
dmy_hm("14/06/2024 21:40")
r<-dmy_hm("14/06/2024 21:40")
#Conversion of Date to Time
as_date(r)
data.frame(names=c("Krish","Prabha","Nirav","Nira"),age=c("20","21","0","0"))
us<-data.frame(names=c("Krish","Prabha","Nirav","Nira"),age=c("20","21","0","0"))
print(us)
us[2,1]
file.create("new_file.csv")
file.create("temp_file.csv")
file.copy("new_file","temp_file")
file.copy("new_file.csv","temp_file.csv")
file.copy("new_file.csv","test")
unlink("temp_file.csv")
file.create("temp_file.csv")
unlink("temp_file.csv")
matrix(c(3:8),nrow=2)
a<-matrix(c(3:8),ncol = 3)
print(a)
x<-2
y<-5
x>y
z<-3
x>y & x<z
x<y & y>z #True
!TRUE
x>y | x<z
x<-3
if(x>0){
print("x is a positive number")
}
x<-3
if(x>0){
print("x is a positive number")
}
else{
if(x>0){
print("x is a positive number")
}else{
print("x is zero or a negative number")
}
x<-3
if(x>0){
print("x is a positive number")
}else{
print("x is zero or a negative number")
}
x<-0
if(x>0){
print("x is a positive number")
}else{
print("x is zero or a negative number")
}
y<-0
if(y>0){
print("y is a positive number")
} else if(y==0){
print("y is zero")
} else{
print("y is a negative number")
}
y<-0
if(y>0){
print("y is a positive number")
} else if(y==0){
print("y is zero")
} else{
print("y is a negative number")
}
result<-c(1L,1.2,3.27)
inte <- c(2L,3L)#L is used for denoting integer
typeof(inte)  #To identify the type
char <- c("krish","maniprabha")
typeof(char)
logi <- c(TRUE,FALSE)
typeof(logi)
print(logi)
print(char)
print(result)
print(inte)
head(diamonds)
install.packages("tidyverse")
library(tidyverse)
head(diamonds)
glimpse(diamonds)
str(diamonds)
colnames(diamonds)
library(tidyverse)
colnames(diamonds)
head(diamonds)
rename(diamonds,carat_n=carat)
rename(diamonds,cut_n=cut)
head(diamonds)
summarize(diamonds,mean_carat=mean(carat))
ggplot(data=diamonds,aes(x=carat,y=cut))+geom_point()
ggplot(data=diamonds,aes(x=carat,y=cut))+geom_point(aes(color=species))
ggplot(data=diamonds,aes(x=carat,y=cut))+geom_point(aes(color=cut))
ggplot(data=diamonds,aes(x=carat,y=price))+geom_point()
ggplot(data=diamonds,aes(x=carat,y=price,color=cut))+geom_point()
ggplot(data=diamonds,aes(x=carat,y=price,color=cut))+geom_point()+facet_wrap(~cut)
installed.packages()
